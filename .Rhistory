left_join(market_data, by = c('Date' = 'Date')) %>%
mutate(ln_return = close - lag(close)) %>%
mutate(ln_return_rf_market = ln_return - riskfree_rf) %>%
select(-close, -ln_return, -riskfree_rf)
)
modelframe
ticker_symbol <- unique(stock_data2$symbol)
modelframe <- select(stock_data2, -symbol) %>% arrange(Date)
modelframe <- (
modelframe %>%
mutate(ln_return = close - lag(close)) %>%
left_join(riskfree_return, by = c('Date' = 'Date')) %>%
mutate(ln_return_rf_stock = ln_return - riskfree_rf) %>%
select(-close, -ln_return)
)
modelframe <- (
modelframe %>%
left_join(market_data, by = c('Date' = 'Date')) %>%
mutate(ln_return = close - lag(close)) %>%
mutate(ln_return_rf_market = ln_return - riskfree_rf) %>%
select(-close, -ln_return, -riskfree_rf) %>%
filter(!is.na(ln_return_rf_stock))
)
modelframe
ticker_symbol <- unique(stock_data2$symbol)
modelframe <- select(stock_data2, -symbol) %>% arrange(Date)
modelframe <- (
modelframe %>%
mutate(ln_return = close - lag(close)) %>%
left_join(riskfree_return, by = c('Date' = 'Date')) %>%
mutate(ln_return_rf_stock = ln_return - riskfree_rf) %>%
select(-close, -ln_return)
)
modelframe <- (
modelframe %>%
left_join(market_data, by = c('Date' = 'Date')) %>%
mutate(ln_return = close - lag(close)) %>%
mutate(ln_return_rf_market = ln_return - riskfree_rf) %>%
select(-close, -ln_return, -riskfree_rf) %>%
filter(!is.na(ln_return_rf_stock)) %>%
mutate(stock_symbol = ticker_symbol) %>%
select(Date, stock_symbol, everything())
)
modelframe
View(modelframe)
ee <- lm(ln_return_rf_stock ~ ln_return_rf_market, data = modelframe)
ee
ticker_symbol <- unique(stock_data2$symbol)
modelframe <- select(stock_data2, -symbol) %>% arrange(Date)
modelframe <- (
modelframe %>%
mutate(ln_return = close / lag(close)) %>%
left_join(riskfree_return, by = c('Date' = 'Date')) %>%
mutate(ln_return_rf_stock = ln_return - riskfree_rf) %>%
select(-close, -ln_return)
)
modelframe <- (
modelframe %>%
left_join(market_data, by = c('Date' = 'Date')) %>%
mutate(ln_return = close / lag(close)) %>%
mutate(ln_return_rf_market = ln_return - riskfree_rf) %>%
select(-close, -ln_return, -riskfree_rf) %>%
filter(!is.na(ln_return_rf_stock)) %>%
mutate(stock_symbol = ticker_symbol) %>%
select(Date, stock_symbol, everything())
)
ticker_symbol <- unique(stock_data2$symbol)
ee <- lm(ln_return_rf_stock ~ ln_return_rf_market, data = modelframe)
ee
stock_data2 <- filter(stock_data, symbol = 'ZTS')
stock_data2 <- filter(stock_data, symbol == 'ZTS')
stock_data2
ticker_symbol <- unique(stock_data2$symbol)
modelframe <- select(stock_data2, -symbol) %>% arrange(Date)
modelframe <- (
modelframe %>%
mutate(ln_return = close / lag(close)) %>%
left_join(riskfree_return, by = c('Date' = 'Date')) %>%
mutate(ln_return_rf_stock = ln_return - riskfree_rf) %>%
select(-close, -ln_return)
)
modelframe <- (
modelframe %>%
left_join(market_data, by = c('Date' = 'Date')) %>%
mutate(ln_return = close / lag(close)) %>%
mutate(ln_return_rf_market = ln_return - riskfree_rf) %>%
select(-close, -ln_return, -riskfree_rf) %>%
filter(!is.na(ln_return_rf_stock)) %>%
mutate(stock_symbol = ticker_symbol) %>%
select(Date, stock_symbol, everything())
)
ee <- lm(ln_return_rf_stock ~ ln_return_rf_market, data = modelframe)
ee
View(modelframe)
View(stock_data2)
ticker_symbol <- unique(stock_data2$symbol)
modelframe <- select(stock_data2, -symbol) %>% arrange(Date)
modelframe %>%
mutate(ln_return = close / lag(close))
modelframe <- (
modelframe %>%
mutate(ln_return = log(close / lag(close), exp())) %>%
left_join(riskfree_return, by = c('Date' = 'Date')) %>%
mutate(ln_return_rf_stock = ln_return - riskfree_rf) %>%
select(-close, -ln_return)
)
modelframe <- (
modelframe %>%
mutate(ln_return = log(close / lag(close))) %>%
left_join(riskfree_return, by = c('Date' = 'Date')) %>%
mutate(ln_return_rf_stock = ln_return - riskfree_rf) %>%
select(-close, -ln_return)
)
ticker_symbol <- unique(stock_data2$symbol)
modelframe <- select(stock_data2, -symbol) %>% arrange(Date)
modelframe <- (
modelframe %>%
mutate(ln_return = log(close / lag(close))) %>%
left_join(riskfree_return, by = c('Date' = 'Date')) %>%
mutate(ln_return_rf_stock = ln_return - riskfree_rf) %>%
select(-close, -ln_return)
)
View(modelframe)
?log
ticker_symbol <- unique(stock_data2$symbol)
modelframe <- select(stock_data2, -symbol) %>% arrange(Date)
modelframe <- (
modelframe %>%
mutate(ln_return = log(close / lag(close))) %>%
left_join(riskfree_return, by = c('Date' = 'Date')) %>%
mutate(ln_return_rf_stock = ln_return - riskfree_rf) %>%
select(-close, -ln_return)
)
modelframe <- (
modelframe %>%
left_join(market_data, by = c('Date' = 'Date')) %>%
mutate(ln_return = log(close / lag(close))) %>%
mutate(ln_return_rf_market = ln_return - riskfree_rf) %>%
select(-close, -ln_return, -riskfree_rf) %>%
filter(!is.na(ln_return_rf_stock)) %>%
mutate(stock_symbol = ticker_symbol) %>%
select(Date, stock_symbol, everything())
)
ee <- lm(ln_return_rf_stock ~ ln_return_rf_market, data = modelframe)
ee
?by
result <- by(stock_data, list(stock_data$symbol), model_data, riskfree_return = riskfree_return, market_data = market_data, simplify = FALSE)
# This function takes original stock data and creates the necessary
# predictor X (the natural log of market index - risk free return)
# response Y (the natural log of stock return - risk free return)
# columns. This new output data.frame is used for linear regression modeling
model_data <- function(stock_data2, riskfree_return, market_data) {
ticker_symbol <- unique(stock_data2$symbol)
modelframe <- select(stock_data2, -symbol) %>% arrange(Date)
modelframe <- (
modelframe %>%
mutate(ln_return = log(close / lag(close))) %>%
left_join(riskfree_return, by = c('Date' = 'Date')) %>%
mutate(ln_return_rf_stock = ln_return - riskfree_rf) %>%
select(-close, -ln_return)
)
modelframe <- (
modelframe %>%
left_join(market_data, by = c('Date' = 'Date')) %>%
mutate(ln_return = log(close / lag(close))) %>%
mutate(ln_return_rf_market = ln_return - riskfree_rf) %>%
select(-close, -ln_return, -riskfree_rf) %>%
filter(!is.na(ln_return_rf_stock)) %>%
mutate(stock_symbol = ticker_symbol) %>%
select(Date, stock_symbol, everything())
)
}
result <- by(stock_data, list(stock_data$symbol), model_data, riskfree_return = riskfree_return, market_data = market_data, simplify = FALSE)
model_frames <- by(stock_data, list(stock_data$symbol), model_data,
riskfree_return = riskfree_return, market_data = market_data,
simplify = FALSE)
rm(e, ee, stock_data2)
rm(list=ls())
library(tidyverse)
# Question 2.1
stock_data <- read_csv('Homework/Homework 2/stock_data.csv')
riskfree_return <- read_csv("Homework/Homework 2/date_riskfree_return.csv")
market_data <- read_csv('Homework/Homework 2/market_close.csv')
riskfree_return <- rename(riskfree_return, riskfree_rf = `Risk Free Rf`)
stock_data <- (
stock_data %>%
mutate(Date = as.Date(Date, format = '%m/%d/%Y')) %>%
gather(symbol, close, -Date)
)
riskfree_return <- (
riskfree_return %>%
mutate(Date = as.Date(Date, format = '%m/%d/%Y'))
)
market_data <- (
market_data %>%
mutate(Date = as.Date(Date, format = '%m/%d/%Y'))
)
# This function takes original stock data and creates the necessary
# predictor X (the natural log of market index - risk free return)
# response Y (the natural log of stock return - risk free return)
# columns. This new output data.frame is used for linear regression modeling
model_data <- function(stock_data2, riskfree_return, market_data) {
ticker_symbol <- unique(stock_data2$symbol)
modelframe <- select(stock_data2, -symbol) %>% arrange(Date)
modelframe <- (
modelframe %>%
mutate(ln_return = log(close / lag(close))) %>%
left_join(riskfree_return, by = c('Date' = 'Date')) %>%
mutate(ln_return_rf_stock = ln_return - riskfree_rf) %>%
select(-close, -ln_return)
)
modelframe <- (
modelframe %>%
left_join(market_data, by = c('Date' = 'Date')) %>%
mutate(ln_return = log(close / lag(close))) %>%
mutate(ln_return_rf_market = ln_return - riskfree_rf) %>%
select(-close, -ln_return, -riskfree_rf) %>%
filter(!is.na(ln_return_rf_stock)) %>%
mutate(stock_symbol = ticker_symbol) %>%
select(Date, stock_symbol, everything())
)
}
model_frames <- by(stock_data, list(stock_data$symbol), model_data,
riskfree_return = riskfree_return, market_data = market_data,
simplify = FALSE)
model_frames
asset_capm <- lapply(model_frames, function(x) {
model <- lm(ln_return_rf_stock ~ ln_return_rf_market, data = x)
return(model)
})
ee <- lm(ln_return_rf_stock ~ ln_return_rf_market, data = modelframe)asset_capm
asset_capm
asset_capm <- lapply(model_frames, function(x) {
model <- lm(ln_return_rf_stock ~ ln_return_rf_market, data = x)
ticker <- names(x)
return(ticker)
})
asset_capm
asset_capm <- lapply(model_frames, function(x) {
model <- lm(ln_return_rf_stock ~ ln_return_rf_market, data = x)
ticker <- names(x$symbol)
return(list(model = model, stock = ticker))
})
warnings()
model_frames[[1]]
asset_capm <- lapply(model_frames, function(x) {
model <- lm(ln_return_rf_stock ~ ln_return_rf_market, data = x)
ticker <- names(x$stock_symbol)
return(list(model = model, stock = ticker))
})
asset_capm
asset_capm <- lapply(model_frames, function(x) {
model <- lm(ln_return_rf_stock ~ ln_return_rf_market, data = x)
ticker <- unique(x$stock_symbol)
return(list(model = model, stock = ticker))
})
asset_capm
e <- asset_capm[[1]]
e[['model']]
ee <- e[['model']]
ee
ee$coefficients
summary(ee)
eee <- summary(ee)
eee$coefficients
coef(eee)
coef(eee)[1]
coef(eee)[2]
coef(eee)[1, 4]
summary(ee)
coef(summary(ee)[2, 4])
coef(summary(ee))[2, 4]
coef(summary(ee))[2, 1]
coef(summary(ee))[2, 2]
coef(summary(ee))[2, 3]
coef(summary(ee))[2, 4]
coef(summary(ee))[2, 4] < 0.05
model_frames <- by(stock_data, list(stock_data$symbol), model_data,
riskfree_return = riskfree_return, market_data = market_data,
simplify = FALSE)
asset_capm
coef(summary(ee))
coef(summary(ee))[2, 1]
model_frames <- by(stock_data, list(stock_data$symbol), model_data,
riskfree_return = riskfree_return, market_data = market_data,
simplify = FALSE)
asset_capm
asset_capm[[1]]
asset_capm <- lapply(model_frames, function(x) {
model <- lm(ln_return_rf_stock ~ ln_return_rf_market, data = x)
ticker <- unique(x$stock_symbol)
beta_significance <- coef(summary(model))[2, 4]
beta_value <- coef(summary(model))[2, 1]
beta_se <- coef(summary(model))[2, 2]
if (beta_significance < 0.05) {
beta_is_significant <- TRUE
} else {
beta_is_significant <- FALSE
}
return(list(model = model, stock = ticker,
significant = beta_is_significant,
beta_value = beta_value, beta_se = beta_se))
})
asset_capm[[1]]
final_result <- lapply(asset_capm, function(x) {
r <- data_frame(stock = x$stock, beta = x$beta_value, beta_se = x$beta_se,
beta_095 = x$significant)
return(r)
})
final_result <- bind_rows(final_result)
final_resultfinal_result
final_result
View(final_result)
t.test
?t.test
?lm
ee
t.test(ee)
asset_capm <- lapply(model_frames, function(x) {
model <- lm(ln_return_rf_stock ~ ln_return_rf_market, data = x)
ticker <- unique(x$stock_symbol)
beta_value <- coef(summary(model))[2, 1]
beta_se <- coef(summary(model))[2, 2]
t_value <- (beta_value - 1) / beta_se
t_crit <- 1.645
if (t_value < t_crit) {
beta_is_significant <- TRUE
} else {
beta_is_significant <- FALSE
}
return(list(model = model, stock = ticker,
significant = beta_is_significant,
beta_value = beta_value, beta_se = beta_se))
})
final_result <- lapply(asset_capm, function(x) {
r <- data_frame(stock = x$stock, beta = x$beta_value, beta_se = x$beta_se,
beta_095 = x$significant)
return(r)
})
final_result <- bind_rows(final_result)
final_result
View(final_result)
table(final_result$beta_095)
smb_hml <- read_csv("Homework/Homework 2/smb_hml.csv")
smb_hml
smb_hml <- mutate(smb_hml, Date = as.Date(Date, format = "%m/%d/%Y"))
smb_hml
model_data <- function(stock_data2, riskfree_return, market_data) {
ticker_symbol <- unique(stock_data2$symbol)
modelframe <- select(stock_data2, -symbol) %>% arrange(Date)
modelframe <- (
modelframe %>%
mutate(ln_return = log(close / lag(close))) %>%
left_join(riskfree_return, by = c('Date' = 'Date')) %>%
mutate(ln_return_rf_stock = ln_return - riskfree_rf) %>%
select(-close, -ln_return)
)
modelframe <- (
modelframe %>%
left_join(market_data, by = c('Date' = 'Date')) %>%
mutate(ln_return = log(close / lag(close))) %>%
mutate(ln_return_rf_market = ln_return - riskfree_rf) %>%
select(-close, -ln_return, -riskfree_rf) %>%
filter(!is.na(ln_return_rf_stock)) %>%
mutate(stock_symbol = ticker_symbol) %>%
select(Date, stock_symbol, everything())
)
modelframe <- left_join(modelframe, smb_hml, by = c('Date' = 'Date'))
return(modelframe)
}
model_data <- function(stock_data2, riskfree_return, market_data, smb_hml) {
ticker_symbol <- unique(stock_data2$symbol)
modelframe <- select(stock_data2, -symbol) %>% arrange(Date)
modelframe <- (
modelframe %>%
mutate(ln_return = log(close / lag(close))) %>%
left_join(riskfree_return, by = c('Date' = 'Date')) %>%
mutate(ln_return_rf_stock = ln_return - riskfree_rf) %>%
select(-close, -ln_return)
)
modelframe <- (
modelframe %>%
left_join(market_data, by = c('Date' = 'Date')) %>%
mutate(ln_return = log(close / lag(close))) %>%
mutate(ln_return_rf_market = ln_return - riskfree_rf) %>%
select(-close, -ln_return, -riskfree_rf) %>%
filter(!is.na(ln_return_rf_stock)) %>%
mutate(stock_symbol = ticker_symbol) %>%
select(Date, stock_symbol, everything())
)
modelframe <- left_join(modelframe, smb_hml, by = c('Date' = 'Date'))
return(modelframe)
}
model_frames <- by(stock_data, list(stock_data$symbol), model_data,
riskfree_return = riskfree_return, market_data = market_data,
smb_hml = smb_hml, simplify = FALSE)
model_frames[[1]]
?scale
model_data <- function(stock_data2, riskfree_return, market_data, smb_hml) {
ticker_symbol <- unique(stock_data2$symbol)
modelframe <- select(stock_data2, -symbol) %>% arrange(Date)
modelframe <- (
modelframe %>%
mutate(ln_return = log(close / lag(close))) %>%
left_join(riskfree_return, by = c('Date' = 'Date')) %>%
mutate(ln_return_rf_stock = ln_return - riskfree_rf) %>%
select(-close, -ln_return)
)
modelframe <- (
modelframe %>%
left_join(market_data, by = c('Date' = 'Date')) %>%
mutate(ln_return = log(close / lag(close))) %>%
mutate(ln_return_rf_market = ln_return - riskfree_rf) %>%
select(-close, -ln_return, -riskfree_rf) %>%
filter(!is.na(ln_return_rf_stock)) %>%
mutate(stock_symbol = ticker_symbol) %>%
select(Date, stock_symbol, everything())
)
modelframe <- (
modelframe %>%
left_join(smb_hml, by = c('Date' = 'Date')) %>%
mutate(SMB = scale(SMB, center = TRUE, scale = FALSE),
HML = scale(HML, center = TRUE, scale = FALSE))
)
return(modelframe)
}
model_frames <- by(stock_data, list(stock_data$symbol), model_data,
riskfree_return = riskfree_return, market_data = market_data,
smb_hml = smb_hml, simplify = FALSE)
fama_french <- read_csv("Homework/Homework 2/fama_french_factors.csv")
fama_french <- mutate(fama_french, Date = as.Date(Date, format = "%m/%d/%Y"))
fama_french
fama_french <- read_csv("Homework/Homework 2/fama_french_factors.csv")
fama_french <- (
fama_french
fama_french <- read_csv("Homework/Homework 2/fama_french_factors.csv")
fama_french <- (
fama_french %>%
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
mutate(mkt_rf = `(Mkt-RF)*`, smb = `SMB*`, hml = `HML*`)
)
fama_french
fama_french <- read_csv("Homework/Homework 2/fama_french_factors.csv")
fama_french <- (
fama_french %>%
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
rename(mkt_rf = `(Mkt-RF)*`, smb = `SMB*`, hml = `HML*`)
)
fama_french
model_data <- function(stock_data2, riskfree_return, market_data, fama_french) {
ticker_symbol <- unique(stock_data2$symbol)
modelframe <- select(stock_data2, -symbol) %>% arrange(Date)
modelframe <- (
modelframe %>%
mutate(ln_return = log(close / lag(close))) %>%
left_join(riskfree_return, by = c('Date' = 'Date')) %>%
mutate(ln_return_rf_stock = ln_return - riskfree_rf) %>%
select(-close, -ln_return)
)
modelframe <- (
modelframe %>%
left_join(market_data, by = c('Date' = 'Date')) %>%
mutate(ln_return = log(close / lag(close))) %>%
mutate(ln_return_rf_market = ln_return - riskfree_rf) %>%
select(-close, -ln_return, -riskfree_rf) %>%
filter(!is.na(ln_return_rf_stock)) %>%
mutate(stock_symbol = ticker_symbol) %>%
select(Date, stock_symbol, everything())
)
modelframe <- (
modelframe %>%
left_join(fama_french, by = c('Date' = 'Date'))
)
return(modelframe)
}
model_frames <- by(stock_data, list(stock_data$symbol), model_data,
riskfree_return = riskfree_return, market_data = market_data,
fama_french = fama_french, simplify = FALSE)
model_frames
model_frames[[1]]
x <- model_frames[[1]]
x
model <- lm(ln_return_rf_stock ~ mkt_rf + smb + hml, data = x)
ticker <- unique(x$stock_symbol)
model
# Question 2.3
logit_data <- read_csv("Homework/Homework 2/logitmodel.csv")
logit_data
logit_data %>% mutate_all(logit_data, funs(as.numeric(.)))
logit_data
logit_data <- mutate_all(logit_data, funs(as.numeric(.)))
logit_data
# Question 2.3
logit_data <- read_csv("Homework/Homework 2/logitmodel.csv")
logit_data <- mutate_all(logit_data, funs(as.numeric(.)))
logit_data <- (
logit_data %>%
mutate(new_prob = log(1 / (1 - Prob)))
)
logit_data
model <- lm(new_prob ~ X1 + X2 + X3, data = logit_data)
model
predicted_prob <- predict(model, newdata = logit_data)
predicted_prob
(logit_data$new_prob - predicted_prob)^2
log(1)
log(2)
exp(log(2))
(logit_data$Prob - exp(predicted_prob) / (1 + exp(predicted_prob)))^2
hist((logit_data$Prob - exp(predicted_prob) / (1 + exp(predicted_prob)))^2)
summary((logit_data$Prob - exp(predicted_prob) / (1 + exp(predicted_prob)))^2)
round(summary((logit_data$Prob - exp(predicted_prob) / (1 + exp(predicted_prob)))^2), 4)

game_teamid_date %>%
arrange(teamID, Date, GameID) %>%
group_by(teamID) %>%
mutate(last_game_date = lag(Date, 1, order_by = teamID)) %>%
mutate(ndays = difftime(Date, last_game_date, units = 'days')) %>%
mutate(ndays = as.numeric(ndays)) %>%
mutate(ndays = replace(ndays, is.na(ndays), 0)) %>%
rename(ndays_last_game = ndays) %>%
mutate(ngames_played = seq_len(n()) - 1)
)
game_teamid_date
generate_features <- function(games) {
game_teamid_date <- rbind(
select(games, HomeID, Date, Week, GameID) %>% rename(teamID = HomeID),
select(games, AwayID, Date, Week, GameID) %>% rename(teamID = AwayID)
)
game_teamid_date <- (
game_teamid_date %>%
arrange(teamID, Date, GameID) %>%
group_by(teamID) %>%
mutate(last_game_date = lag(Date, 1, order_by = teamID)) %>%
mutate(ndays = difftime(Date, last_game_date, units = 'days')) %>%
mutate(ndays = as.numeric(ndays)) %>%
mutate(ndays = replace(ndays, is.na(ndays), 0)) %>%
rename(ndays_last_game = ndays) %>%
mutate(ngames_played = seq_len(n()) - 1) %>%
ungroup() %>%
select(teamID, GameID, ndays_last_game, ngames_played)
)
return(game_teamid_date)
}
game_teamid_date
generate_features(games)
generate_features <- function(games) {
game_teamid_date <- rbind(
select(games, HomeID, Date, Week, GameID) %>% rename(teamID = HomeID),
select(games, AwayID, Date, Week, GameID) %>% rename(teamID = AwayID)
)
game_teamid_date <- (
game_teamid_date %>%
arrange(teamID, Date, GameID) %>%
group_by(teamID) %>%
mutate(last_game_date = lag(Date, 1, order_by = teamID)) %>%
mutate(ndays = difftime(Date, last_game_date, units = 'days')) %>%
mutate(ndays = as.numeric(ndays)) %>%
mutate(ndays = replace(ndays, is.na(ndays), 0)) %>%
rename(ndays_last_game = ndays) %>%
mutate(ngames_played = seq_len(n()) - 1) %>%
mutate_at(vars(ndays_last_game, ngames_played), funs(scales::rescale(.)))
ungroup() %>%
select(teamID, GameID, ndays_last_game, ngames_played)
)
return(game_teamid_date)
}
generate_features <- function(games) {
game_teamid_date <- rbind(
select(games, HomeID, Date, Week, GameID) %>% rename(teamID = HomeID),
select(games, AwayID, Date, Week, GameID) %>% rename(teamID = AwayID)
)
game_teamid_date <- (
game_teamid_date %>%
arrange(teamID, Date, GameID) %>%
group_by(teamID) %>%
mutate(last_game_date = lag(Date, 1, order_by = teamID)) %>%
mutate(ndays = difftime(Date, last_game_date, units = 'days')) %>%
mutate(ndays = as.numeric(ndays)) %>%
mutate(ndays = replace(ndays, is.na(ndays), 0)) %>%
rename(ndays_last_game = ndays) %>%
mutate(ngames_played = seq_len(n()) - 1) %>%
mutate_at(vars(ndays_last_game, ngames_played), funs(scales::rescale(.))) %>%
ungroup() %>%
select(teamID, GameID, ndays_last_game, ngames_played)
)
return(game_teamid_date)
}
generate_features(games)
generate_features <- function(games) {
game_teamid_date <- rbind(
select(games, HomeID, Date, Week, GameID) %>% rename(teamID = HomeID),
select(games, AwayID, Date, Week, GameID) %>% rename(teamID = AwayID)
)
game_teamid_date <- (
game_teamid_date %>%
arrange(teamID, Date, GameID) %>%
group_by(teamID) %>%
mutate(last_game_date = lag(Date, 1, order_by = teamID)) %>%
mutate(ndays = difftime(Date, last_game_date, units = 'days')) %>%
mutate(ndays = as.numeric(ndays)) %>%
mutate(ndays = replace(ndays, is.na(ndays), 0)) %>%
rename(ndays_last_game = ndays) %>%
mutate(ngames_played = seq_len(n()) - 1) %>%
mutate_at(vars(ndays_last_game, ngames_played), funs(scales::rescale(.))) %>%
ungroup() %>%
select(teamID, GameID, ndays_last_game, ngames_played)
)
return(game_teamid_date)
}
generate_features(games)
game_teamid_date <- rbind(
select(games, HomeID, Date, Week, GameID) %>% rename(teamID = HomeID),
select(games, AwayID, Date, Week, GameID) %>% rename(teamID = AwayID)
)
game_teamid_date %>%
arrange(teamID, Date, GameID) %>%
group_by(teamID) %>%
mutate(last_game_date = lag(Date, 1, order_by = teamID)) %>%
mutate(ndays = difftime(Date, last_game_date, units = 'days')) %>%
mutate(ndays = as.numeric(ndays)) %>%
mutate(ndays = replace(ndays, is.na(ndays), 0)) %>%
rename(ndays_last_game = ndays) %>%
mutate(ngames_played = seq_len(n()) - 1)
game_teamid_date %>%
arrange(teamID, Date, GameID) %>%
group_by(teamID) %>%
mutate(last_game_date = lag(Date, 1, order_by = teamID)) %>%
mutate(ndays = difftime(Date, last_game_date, units = 'days')) %>%
mutate(ndays = as.numeric(ndays)) %>%
mutate(ndays = replace(ndays, is.na(ndays), 0)) %>%
rename(ndays_last_game = ndays) %>%
mutate(ngames_played = seq_len(n()) - 1) %>%
mutate_at(vars(ndays_last_game, ngames_played), funs(scales::rescale(.)))
game_teamid_date %>%
arrange(teamID, Date, GameID) %>%
group_by(teamID) %>%
mutate(last_game_date = lag(Date, 1, order_by = teamID)) %>%
mutate(ndays = difftime(Date, last_game_date, units = 'days')) %>%
mutate(ndays = as.numeric(ndays)) %>%
mutate(ndays = replace(ndays, is.na(ndays), 0)) %>%
rename(ndays_last_game = ndays) %>%
mutate(ngames_played = seq_len(n()) - 1)
game_teamid_date %>%
arrange(teamID, Date, GameID) %>%
group_by(teamID) %>%
mutate(last_game_date = lag(Date, 1, order_by = teamID)) %>%
mutate(ndays = difftime(Date, last_game_date, units = 'days')) %>%
mutate(ndays = as.numeric(ndays)) %>%
mutate(ndays = replace(ndays, is.na(ndays), 0)) %>%
rename(ndays_last_game = ndays) %>%
mutate(ngames_played = seq_len(n()) - 1) %>%
mutate_at(vars(ndays_last_game, ngames_played), funs(scales::rescale(.)))
game_teamid_date %>%
arrange(teamID, Date, GameID) %>%
group_by(teamID) %>%
mutate(last_game_date = lag(Date, 1, order_by = teamID)) %>%
mutate(ndays = difftime(Date, last_game_date, units = 'days')) %>%
mutate(ndays = as.numeric(ndays)) %>%
mutate(ndays = replace(ndays, is.na(ndays), 0)) %>%
rename(ndays_last_game = ndays) %>%
mutate(ngames_played = seq_len(n()) - 1) %>%
mutate_at(vars(ndays_last_game, ngames_played), funs(scales::rescale(.)))
game_teamid_date %>%
arrange(teamID, Date, GameID) %>%
group_by(teamID) %>%
mutate(last_game_date = lag(Date, 1, order_by = teamID)) %>%
mutate(ndays = difftime(Date, last_game_date, units = 'days')) %>%
mutate(ndays = as.numeric(ndays)) %>%
mutate(ndays = replace(ndays, is.na(ndays), 0)) %>%
rename(ndays_last_game = ndays) %>%
mutate(ngames_played = seq_len(n()) - 1) %>%
mutate_at(vars(ndays_last_game, ngames_played), funs(scales::rescale(.)))
game_teamid_date %>%
arrange(teamID, Date, GameID) %>%
group_by(teamID) %>%
mutate(last_game_date = lag(Date, 1, order_by = teamID)) %>%
mutate(ndays = difftime(Date, last_game_date, units = 'days')) %>%
mutate(ndays = as.numeric(ndays)) %>%
mutate(ndays = replace(ndays, is.na(ndays), 0)) %>%
rename(ndays_last_game = ndays) %>%
mutate(ngames_played = seq_len(n()) - 1) %>%
mutate_at(vars(ndays_last_game, ngames_played), funs(scales::rescale(.)))
game_teamid_date %>%
arrange(teamID, Date, GameID) %>%
group_by(teamID) %>%
mutate(last_game_date = lag(Date, 1, order_by = teamID)) %>%
mutate(ndays = difftime(Date, last_game_date, units = 'days')) %>%
mutate(ndays = as.numeric(ndays)) %>%
mutate(ndays = replace(ndays, is.na(ndays), 0)) %>%
rename(ndays_last_game = ndays) %>%
mutate(ngames_played = seq_len(n()) - 1) %>%
mutate(ndays_last_game = scales::rescale(ndays_last_game))
generate_features <- function(games) {
game_teamid_date <- rbind(
select(games, HomeID, Date, Week, GameID) %>% rename(teamID = HomeID),
select(games, AwayID, Date, Week, GameID) %>% rename(teamID = AwayID)
)
game_teamid_date <- (
game_teamid_date %>%
arrange(teamID, Date, GameID) %>%
group_by(teamID) %>%
mutate(last_game_date = lag(Date, 1, order_by = teamID)) %>%
mutate(ndays = difftime(Date, last_game_date, units = 'days')) %>%
mutate(ndays = as.numeric(ndays)) %>%
mutate(ndays = replace(ndays, is.na(ndays), 0)) %>%
rename(ndays_last_game = ndays) %>%
mutate(ngames_played = seq_len(n()) - 1) %>%
mutate(ndays_last_game = scales::rescale(ndays_last_game)) %>%
mutate(ngames_played = scales::rescale(ngames_played)) %>%
ungroup() %>%
select(teamID, GameID, ndays_last_game, ngames_played)
)
return(game_teamid_date)
}
game_teamid_date <- rbind(
select(games, HomeID, Date, Week, GameID) %>% rename(teamID = HomeID),
select(games, AwayID, Date, Week, GameID) %>% rename(teamID = AwayID)
)
game_teamid_date %>%
arrange(teamID, Date, GameID) %>%
group_by(teamID) %>%
mutate(last_game_date = lag(Date, 1, order_by = teamID)) %>%
mutate(ndays = difftime(Date, last_game_date, units = 'days')) %>%
mutate(ndays = as.numeric(ndays)) %>%
mutate(ndays = replace(ndays, is.na(ndays), 0)) %>%
rename(ndays_last_game = ndays) %>%
mutate(ngames_played = seq_len(n()) - 1) %>%
mutate(ndays_last_game = scales::rescale(ndays_last_game)) %>%
mutate(ngames_played = scales::rescale(ngames_played)) %>%
ungroup() %>%
select(teamID, GameID, ndays_last_game, ngames_played)
generate_features <- function(games) {
game_teamid_date <- rbind(
select(games, HomeID, Date, Week, GameID) %>% rename(teamID = HomeID),
select(games, AwayID, Date, Week, GameID) %>% rename(teamID = AwayID)
)
game_teamid_date <- (
game_teamid_date %>%
arrange(teamID, Date, GameID) %>%
group_by(teamID) %>%
mutate(last_game_date = lag(Date, 1, order_by = teamID)) %>%
mutate(ndays = difftime(Date, last_game_date, units = 'days')) %>%
mutate(ndays = as.numeric(ndays)) %>%
mutate(ndays = replace(ndays, is.na(ndays), 0)) %>%
rename(ndays_last_game = ndays) %>%
mutate(ngames_played = seq_len(n()) - 1) %>%
mutate(ndays_last_game = scales::rescale(ndays_last_game)) %>%
mutate(ngames_played = scales::rescale(ngames_played)) %>%
ungroup() %>%
select(teamID, GameID, ndays_last_game, ngames_played)
)
return(game_teamid_date)
}
generate_features(games)
generate_features <- function(games) {
games2 <- games
game_teamid_date <- rbind(
select(games2, HomeID, Date, Week, GameID) %>% rename(teamID = HomeID),
select(games2, AwayID, Date, Week, GameID) %>% rename(teamID = AwayID)
)
game_teamid_date <- (
game_teamid_date %>%
arrange(teamID, Date, GameID) %>%
group_by(teamID) %>%
mutate(last_game_date = lag(Date, 1, order_by = teamID)) %>%
mutate(ndays = difftime(Date, last_game_date, units = 'days')) %>%
mutate(ndays = as.numeric(ndays)) %>%
mutate(ndays = replace(ndays, is.na(ndays), 0)) %>%
rename(ndays_last_game = ndays) %>%
mutate(ngames_played = seq_len(n()) - 1) %>%
mutate(ndays_last_game = scales::rescale(ndays_last_game)) %>%
mutate(ngames_played = scales::rescale(ngames_played)) %>%
ungroup() %>%
select(teamID, GameID, ndays_last_game, ngames_played)
)
return(game_teamid_date)
}
games2 <- games
game_teamid_date <- rbind(
select(games2, HomeID, Date, Week, GameID) %>% rename(teamID = HomeID),
select(games2, AwayID, Date, Week, GameID) %>% rename(teamID = AwayID)
)
game_teamid_date <- (
game_teamid_date %>%
arrange(teamID, Date, GameID) %>%
group_by(teamID) %>%
mutate(last_game_date = lag(Date, 1, order_by = teamID)) %>%
mutate(ndays = difftime(Date, last_game_date, units = 'days')) %>%
mutate(ndays = as.numeric(ndays)) %>%
mutate(ndays = replace(ndays, is.na(ndays), 0)) %>%
rename(ndays_last_game = ndays) %>%
mutate(ngames_played = seq_len(n()) - 1) %>%
mutate(ndays_last_game = scales::rescale(ndays_last_game)) %>%
mutate(ngames_played = scales::rescale(ngames_played)) %>%
ungroup() %>%
select(teamID, GameID, ndays_last_game, ngames_played)
)
game_teamid_date
games2
left_join(games2, game_teamid_date, by = c('GameID' = 'GameID', 'HomeID' = 'teamID'))
left_join(games2, game_teamid_date, by = c('GameID' = 'GameID',
'HomeID' = 'teamID')) %>%
rename(HOMENDAYS = ndays_last_game, HOMENGAMES = ngames_played)
generate_features <- function(games) {
games2 <- games
game_teamid_date <- rbind(
select(games2, HomeID, Date, Week, GameID) %>% rename(teamID = HomeID),
select(games2, AwayID, Date, Week, GameID) %>% rename(teamID = AwayID)
)
game_teamid_date <- (
game_teamid_date %>%
arrange(teamID, Date, GameID) %>%
group_by(teamID) %>%
mutate(last_game_date = lag(Date, 1, order_by = teamID)) %>%
mutate(ndays = difftime(Date, last_game_date, units = 'days')) %>%
mutate(ndays = as.numeric(ndays)) %>%
mutate(ndays = replace(ndays, is.na(ndays), 0)) %>%
rename(ndays_last_game = ndays) %>%
mutate(ngames_played = seq_len(n()) - 1) %>%
mutate(ndays_last_game = scales::rescale(ndays_last_game)) %>%
mutate(ngames_played = scales::rescale(ngames_played)) %>%
ungroup() %>%
select(teamID, GameID, ndays_last_game, ngames_played)
)
result <- (
left_join(games2, game_teamid_date, by = c('GameID' = 'GameID',
'HomeID' = 'teamID')) %>%
rename(HOMENDAYS = ndays_last_game, HOMENGAMES = ngames_played) %>%
left_join(games2, game_teamid_date, by = c('GameID' = 'GameID',
'AwayID' = 'teamID')) %>%
rename(AWAYNDAYS = ndays_last_game, AWAYNGAMES = ngames_played)
)
return(result)
}
generate_features(games)
games2 <- games
game_teamid_date <- rbind(
select(games2, HomeID, Date, Week, GameID) %>% rename(teamID = HomeID),
select(games2, AwayID, Date, Week, GameID) %>% rename(teamID = AwayID)
)
game_teamid_date <- (
game_teamid_date %>%
arrange(teamID, Date, GameID) %>%
group_by(teamID) %>%
mutate(last_game_date = lag(Date, 1, order_by = teamID)) %>%
mutate(ndays = difftime(Date, last_game_date, units = 'days')) %>%
mutate(ndays = as.numeric(ndays)) %>%
mutate(ndays = replace(ndays, is.na(ndays), 0)) %>%
rename(ndays_last_game = ndays) %>%
mutate(ngames_played = seq_len(n()) - 1) %>%
mutate(ndays_last_game = scales::rescale(ndays_last_game)) %>%
mutate(ngames_played = scales::rescale(ngames_played)) %>%
ungroup() %>%
select(teamID, GameID, ndays_last_game, ngames_played)
)
left_join(games2, game_teamid_date, by = c('GameID' = 'GameID',
'HomeID' = 'teamID')) %>%
rename(HOMENDAYS = ndays_last_game, HOMENGAMES = ngames_played)
left_join(games2, game_teamid_date, by = c('GameID' = 'GameID',
'HomeID' = 'teamID')) %>%
rename(HOMENDAYS = ndays_last_game, HOMENGAMES = ngames_played) %>%
left_join(games2, game_teamid_date, by = c('GameID' = 'GameID',
'AwayID' = 'teamID'))
games2 %>%
left_join(game_teamid_date, by = c('GameID' = 'GameID',
'HomeID' = 'teamID')) %>%
rename(HOMENDAYS = ndays_last_game, HOMENGAMES = ngames_played) %>%
left_join(game_teamid_date, by = c('GameID' = 'GameID',
'AwayID' = 'teamID')) %>%
rename(AWAYNDAYS = ndays_last_game, AWAYNGAMES = ngames_played)
generate_features <- function(games) {
games2 <- games
game_teamid_date <- rbind(
select(games2, HomeID, Date, Week, GameID) %>% rename(teamID = HomeID),
select(games2, AwayID, Date, Week, GameID) %>% rename(teamID = AwayID)
)
game_teamid_date <- (
game_teamid_date %>%
arrange(teamID, Date, GameID) %>%
group_by(teamID) %>%
mutate(last_game_date = lag(Date, 1, order_by = teamID)) %>%
mutate(ndays = difftime(Date, last_game_date, units = 'days')) %>%
mutate(ndays = as.numeric(ndays)) %>%
mutate(ndays = replace(ndays, is.na(ndays), 0)) %>%
rename(ndays_last_game = ndays) %>%
mutate(ngames_played = seq_len(n()) - 1) %>%
mutate(ndays_last_game = scales::rescale(ndays_last_game)) %>%
mutate(ngames_played = scales::rescale(ngames_played)) %>%
ungroup() %>%
select(teamID, GameID, ndays_last_game, ngames_played)
)
result <- (
games2 %>%
left_join(game_teamid_date, by = c('GameID' = 'GameID',
'HomeID' = 'teamID')) %>%
rename(HOMENDAYS = ndays_last_game, HOMENGAMES = ngames_played) %>%
left_join(game_teamid_date, by = c('GameID' = 'GameID',
'AwayID' = 'teamID')) %>%
rename(AWAYNDAYS = ndays_last_game, AWAYNGAMES = ngames_played)
)
return(result)
}
generate_features(games)
games <- (
games %>%
filter(HomeID != '131' & AwayID != '131')
)
games
games <- generate_features(games)
games
View(games)
games %>%
select(HomeID, AwayID, HomePts, AwayPts, Spread, HOMENDAYS, NOMENGAMES, AWAYNDAYS, AWAYNGAMES)
games %>%
select(-Week, -Date, -HomeTeam, -AwayTeam, -TotalPts)
games %>%
select(-Week, -Date, -HomeTeam, -AwayTeam, -TotalPts, -GameID)
neuralnet::neuralnet(Spread ~ HOMENDAYS + HOMENGAMES + AWAYNDAYS + AWAYNGAMES)
Spread ~ HOMENDAYS + HOMENGAMES + AWAYNDAYS + AWAYNGAMES, data = games
library(tidyverse)
library(caret)
library(neuralnet)
games <- read_tsv("final project/data/original/alt_final_project_games_training.txt")
games <- (
games %>%
mutate(Date = as.Date(Date, '%m/%d/%Y', origin = "1899-12-30")) %>%
arrange(Date) %>%
mutate_at(vars(GameID, HomeID, AwayID), funs(as.character(.))) %>%
mutate_at(vars(AwayPts, Spread, TotalPts), funs(as.numeric(.)))
)
games <- (
games %>%
filter(HomeID != '131' & AwayID != '131')
)
generate_features <- function(games) {
games2 <- games
game_teamid_date <- rbind(
select(games2, HomeID, Date, Week, GameID) %>% rename(teamID = HomeID),
select(games2, AwayID, Date, Week, GameID) %>% rename(teamID = AwayID)
)
game_teamid_date <- (
game_teamid_date %>%
arrange(teamID, Date, GameID) %>%
group_by(teamID) %>%
mutate(last_game_date = lag(Date, 1, order_by = teamID)) %>%
mutate(ndays = difftime(Date, last_game_date, units = 'days')) %>%
mutate(ndays = as.numeric(ndays)) %>%
mutate(ndays = replace(ndays, is.na(ndays), 0)) %>%
rename(ndays_last_game = ndays) %>%
mutate(ngames_played = seq_len(n()) - 1) %>%
mutate(ndays_last_game = scales::rescale(ndays_last_game)) %>%
mutate(ngames_played = scales::rescale(ngames_played)) %>%
ungroup() %>%
select(teamID, GameID, ndays_last_game, ngames_played)
)
result <- (
games2 %>%
left_join(game_teamid_date, by = c('GameID' = 'GameID',
'HomeID' = 'teamID')) %>%
rename(HOMENDAYS = ndays_last_game, HOMENGAMES = ngames_played) %>%
left_join(game_teamid_date, by = c('GameID' = 'GameID',
'AwayID' = 'teamID')) %>%
rename(AWAYNDAYS = ndays_last_game, AWAYNGAMES = ngames_played)
)
return(result)
}
games <- generate_features(games)
games <- (
games %>%
select(Spread, HOMENDAYS, HOMENGAMES, AWAYNDAYS, AWAYNGAMES)
)
games
model <- neuralnet::neuralnet(Spread ~ HOMENDAYS + HOMENGAMES + AWAYNDAYS + AWAYNGAMES, data = games)
model
?neuralnet
model <- neuralnet::neuralnet(Spread ~ HOMENDAYS + HOMENGAMES + AWAYNDAYS + AWAYNGAMES, data = games, hidden = c(10))
model <- neuralnet::neuralnet(Spread ~ HOMENDAYS + HOMENGAMES + AWAYNDAYS + AWAYNGAMES, data = games, hidden = c(5, 5))
predict(model)
neuralnet::compute(model, games)
model <- neuralnet::neuralnet(Spread ~ HOMENDAYS + HOMENGAMES + AWAYNDAYS + AWAYNGAMES, data = games, hidden = c(1))
neuralnet::compute(model, games)
model
model <- neuralnet::neuralnet(Spread ~ HOMENDAYS + HOMENGAMES + AWAYNDAYS + AWAYNGAMES, data = games, hidden = c(1))
neuralnet::compute(model, select(data, -Spread))
select(games, -Spread)
neuralnet::compute(model, select(games, -Spread))
neuralnet::compute(model, select(games, -Spread))$net.result
result <- data_frame(
actual_spread = games$Spread,
predict_spread = neuralnet::compute(model, select(games, -Spread))$net.result
)
result <- data_frame(
actual_spread = games$Spread,
predict_spread = as.vector(neuralnet::compute(model, select(games, -Spread))$net.result)
)
result
model <- neuralnet::neuralnet(Spread ~ HOMENDAYS + HOMENGAMES + AWAYNDAYS + AWAYNGAMES, data = games, hidden = c(2))
model <- neuralnet::neuralnet(Spread ~ HOMENDAYS + HOMENGAMES + AWAYNDAYS + AWAYNGAMES, data = games, hidden = c(2),
linear.output = FALSE, lifesign = 'minimal')
model <- neuralnet::neuralnet(Spread ~ HOMENDAYS + HOMENGAMES + AWAYNDAYS + AWAYNGAMES, data = games, hidden = c(5),
linear.output = FALSE, lifesign = 'minimal')
result <- data_frame(
actual_spread = games$Spread,
predict_spread = as.vector(neuralnet::compute(model, select(games, -Spread))$net.result)
)
result
model <- neuralnet::neuralnet(Spread ~ HOMENDAYS + HOMENGAMES + AWAYNDAYS + AWAYNGAMES, data = games, hidden = c(5),
linear.output = T, lifesign = 'minimal')
result <- data_frame(
actual_spread = games$Spread,
predict_spread = as.vector(neuralnet::compute(model, select(games, -Spread))$net.result)
)
model <- neuralnet::neuralnet(Spread ~ HOMENDAYS + HOMENGAMES + AWAYNDAYS + AWAYNGAMES, data = games, hidden = c(1),
linear.output = T, lifesign = 'minimal')
result <- data_frame(
actual_spread = games$Spread,
predict_spread = as.vector(neuralnet::compute(model, select(games, -Spread))$net.result)
)
result
model <- neuralnet::neuralnet(Spread ~ HOMENDAYS + HOMENGAMES + AWAYNDAYS + AWAYNGAMES, data = games, hidden = c(2, 2),
linear.output = T, lifesign = 'minimal')
model <- neuralnet::neuralnet(Spread ~ HOMENDAYS + HOMENGAMES + AWAYNDAYS + AWAYNGAMES, data = games, hidden = c(2, 2),
linear.output = T, lifesign = 'minimal', thres = 0.05)
rm(list=ls())
